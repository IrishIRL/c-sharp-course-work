@page
@using BattleShipBrain
@model WebApp.Pages.Game.Play
@{
    ViewData["Title"] = "Game - Play";
}
@{
    int currentPlayerNo = @Model.CurrentPlayerNumber + 1;
    int counter = 1;
}
<h2>Player No. @currentPlayerNo turn.</h2><br/>
@if (Model.ShipHit)
{
    @if (Model.SizeLeft != 0)
    {
        <h3 style="color:green">You hit the ship! The left size of the ship is: @Model.SizeLeft</h3><br/>
    }
    else
    {
        <h3 style="color:green">You shot the ship! You can search for another ship now!</h3><br/>
    }
}
@if (Model.IncorrectLocation)
{
    <h3 style="color:red">You cannot place the bomb to the same place.</h3><br/>
}

    <div class="row">
    <div class="col">
        <h2 class="text-center">Enemies board</h2>
        <table class="table table-bordered">
            <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                @for (int x = 0; x < Model.OppositePlayerGameBoard.Board.GetLength(0); x++)
                {
                    <th scope="col">
                        @Model.Letters[x % 26]
                    </th>
                }
            </tr>
            </thead>
            <tbody>
            @for (int y = 0; y < Model.OppositePlayerGameBoard.Board.GetLength(1); y++)
            {
                <tr style="height: 50px; width: 50px;">
                    <th class="bg-dark text-light" style="border: 1px solid #454d55; height: 50px; width: 50px;" scope="row">@y</th>
                    @for (int x = 0; x < Model.OppositePlayerGameBoard.Board.GetLength(0); x++)
                    {
                        <form method="post">
                            <td style="height: 50px; width: 50px; cursor: pointer" onmouseover="this.style.backgroundColor='red'" onmouseout="this.style.backgroundColor='white'">
                                @{ var text = GetCellClass(x, y, true, Model.OppositePlayerGameBoard);}
                                <input type="hidden" asp-for="X" value="@x">
                                <input type="hidden" asp-for="Y" value="@y">
                                <input type="hidden" asp-for="GameId" value="@Model.GameId">
                                <text>@text</text>
                                <input type="submit" value="" class="cell">    
                            </td>
                        </form>
                        counter++;
                    }
                </tr>
            }
            </tbody>
        </table>
   </div>
    
    <div class="col">
        <h2 class="text-center">Your board</h2>
        <table class="table table-bordered">
            <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                @for (int x = 0; x < Model.CurrentPlayerGameBoard.Board.GetLength(0); x++)
                {
                    <th scope="col">
                        @Model.Letters[x % 26]
                    </th>
                }
            </tr>
            </thead>
            <tbody>
            @for (int y = 0; y < Model.CurrentPlayerGameBoard.Board.GetLength(1); y++)
            {
                <tr style="height: 50px; width: 50px;">
                    <th class="bg-dark text-light" style="border: 1px solid #454d55; height: 50px; width: 50px;" scope="row">@y</th>
                    @for (int x = 0; x < Model.CurrentPlayerGameBoard.Board.GetLength(0); x++)
                    {
                        <td style="height: 50px; width: 50px;">
                            @if (Model.CurrentPlayerGameBoard.Board[x, y].IsShip)
                            {
                                if (Model.CurrentPlayerGameBoard.Board[x, y].IsBomb)
                                {
                                    <text>X</text>
                                }
                                else
                                {
                                    <text>8</text>
                                }
                            }
                            else if (Model.CurrentPlayerGameBoard.Board[x, y].IsBomb)
                            {
                                if (!Model.CurrentPlayerGameBoard.Board[x, y].IsShip)
                                {
                                    <text>-</text>
                                }
                            }
                            else
                            {
                                <text> </text>
                            }
                        </td>
                    }
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>
<br/>

@*@{
    if (Index.TurnCounter != 0)
    {
        <button class="btn btn-primary" onclick="location.href='?goBack=true'">Go back to the previous turn</button>
    }
    else if (Index.TurnCounter > Index.NowTurn)
    {
        <button class="btn btn-primary" onclick="location.href='?goFront=true'">Go back to the next turn</button>
    }
}*@
<form method="post">
    <input type="hidden" asp-for="GameId" value="@Model.GameId">
    <input type="hidden" asp-for="Quit" value="1">
    <input type="submit" class="btn btn-primary" value="Save and Exit" asp-page-handler="ExitGame">
</form>
<form method="post">
    <input type="hidden" asp-for="Quit" value="2">
    <input type="submit" class="btn btn-primary" value="Exit without Save" asp-page-handler="ExitGame">
</form>


@functions
{
    public string GetCellClass(int x, int y, bool hidden, GameBoard board)
    {
        var state = board.Board[x, y].ToString();
        if (state == "8" && hidden) return " ";
        return state;
    }
}
<style>
    .selected {
        background-color: #1b6ec2;
    }
    .cell {
        width: 100%;
        height: 100%;
        background-color: white;
        border: 0;
    }
</style>